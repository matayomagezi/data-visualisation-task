{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"skipAnimation\", \"onItemClick\", \"borderRadius\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTransition } from '@react-spring/web';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { BarElement } from './BarElement';\nimport { isBandScaleConfig, isPointScaleConfig } from '../models/axis';\nimport { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\nimport getColor from './getColor';\nimport { useChartId } from '../hooks';\nimport { BarClipPath } from './BarClipPath';\n\n/**\n * Solution of the equations\n * W = barWidth * N + offset * (N-1)\n * offset / (offset + barWidth) = r\n * @param bandWidth The width available to place bars.\n * @param numberOfGroups The number of bars to place in that space.\n * @param gapRatio The ratio of the gap between bars over the bar width.\n * @returns The bar width and the offset between bars.\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getBandSize({\n  bandWidth: W,\n  numberOfGroups: N,\n  gapRatio: r\n}) {\n  if (r === 0) {\n    return {\n      barWidth: W / N,\n      offset: 0\n    };\n  }\n  const barWidth = W / (N + (N - 1) * r);\n  const offset = r * barWidth;\n  return {\n    barWidth,\n    offset\n  };\n}\nconst useAggregatedData = () => {\n  const seriesData = React.useContext(SeriesContext).bar ?? {\n    series: {},\n    stackingGroups: [],\n    seriesOrder: []\n  };\n  const axisData = React.useContext(CartesianContext);\n  const chartId = useChartId();\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  const masks = {};\n  const data = stackingGroups.flatMap(({\n    ids: groupIds\n  }, groupIndex) => {\n    return groupIds.flatMap(seriesId => {\n      const xAxisKey = series[seriesId].xAxisKey ?? defaultXAxisId;\n      const yAxisKey = series[seriesId].yAxisKey ?? defaultYAxisId;\n      const xAxisConfig = xAxis[xAxisKey];\n      const yAxisConfig = yAxis[yAxisKey];\n      const verticalLayout = series[seriesId].layout === 'vertical';\n      let baseScaleConfig;\n      if (verticalLayout) {\n        if (!isBandScaleConfig(xAxisConfig)) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n        }\n        if (xAxis[xAxisKey].data === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property.`);\n        }\n        baseScaleConfig = xAxisConfig;\n        if (isBandScaleConfig(yAxisConfig) || isPointScaleConfig(yAxisConfig)) {\n          throw new Error(`MUI X Charts: ${yAxisKey === DEFAULT_Y_AXIS_KEY ? 'The first `yAxis`' : `The y-axis with id \"${yAxisKey}\"`} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n        }\n      } else {\n        if (!isBandScaleConfig(yAxisConfig)) {\n          throw new Error(`MUI X Charts: ${yAxisKey === DEFAULT_Y_AXIS_KEY ? 'The first `yAxis`' : `The y-axis with id \"${yAxisKey}\"`} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n        }\n        if (yAxis[yAxisKey].data === undefined) {\n          throw new Error(`MUI X Charts: ${yAxisKey === DEFAULT_Y_AXIS_KEY ? 'The first `yAxis`' : `The y-axis with id \"${yAxisKey}\"`} should have data property.`);\n        }\n        baseScaleConfig = yAxisConfig;\n        if (isBandScaleConfig(xAxisConfig) || isPointScaleConfig(xAxisConfig)) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n        }\n      }\n      const xScale = xAxisConfig.scale;\n      const yScale = yAxisConfig.scale;\n      const colorGetter = getColor(series[seriesId], xAxis[xAxisKey], yAxis[yAxisKey]);\n      const bandWidth = baseScaleConfig.scale.bandwidth();\n      const {\n        barWidth,\n        offset\n      } = getBandSize({\n        bandWidth,\n        numberOfGroups: stackingGroups.length,\n        gapRatio: baseScaleConfig.barGapRatio\n      });\n      const barOffset = groupIndex * (barWidth + offset);\n      const {\n        stackedData\n      } = series[seriesId];\n      return stackedData.map((values, dataIndex) => {\n        const valueCoordinates = values.map(v => verticalLayout ? yScale(v) : xScale(v));\n        const minValueCoord = Math.round(Math.min(...valueCoordinates));\n        const maxValueCoord = Math.round(Math.max(...valueCoordinates));\n        const stackId = series[seriesId].stack;\n        const result = {\n          seriesId,\n          dataIndex,\n          layout: series[seriesId].layout,\n          x: verticalLayout ? xScale(xAxis[xAxisKey].data?.[dataIndex]) + barOffset : minValueCoord,\n          y: verticalLayout ? minValueCoord : yScale(yAxis[yAxisKey].data?.[dataIndex]) + barOffset,\n          xOrigin: xScale(0),\n          yOrigin: yScale(0),\n          height: verticalLayout ? maxValueCoord - minValueCoord : barWidth,\n          width: verticalLayout ? barWidth : maxValueCoord - minValueCoord,\n          color: colorGetter(dataIndex),\n          highlightScope: series[seriesId].highlightScope,\n          value: series[seriesId].data[dataIndex],\n          maskId: `${chartId}_${stackId || seriesId}_${groupIndex}_${dataIndex}`\n        };\n        if (!masks[result.maskId]) {\n          masks[result.maskId] = {\n            id: result.maskId,\n            width: 0,\n            height: 0,\n            hasNegative: false,\n            hasPositive: false,\n            layout: result.layout,\n            xOrigin: xScale(0),\n            yOrigin: yScale(0),\n            x: 0,\n            y: 0\n          };\n        }\n        const mask = masks[result.maskId];\n        mask.width = result.layout === 'vertical' ? result.width : mask.width + result.width;\n        mask.height = result.layout === 'vertical' ? mask.height + result.height : result.height;\n        mask.x = Math.min(mask.x === 0 ? Infinity : mask.x, result.x);\n        mask.y = Math.min(mask.y === 0 ? Infinity : mask.y, result.y);\n        mask.hasNegative = mask.hasNegative || (result.value ?? 0) < 0;\n        mask.hasPositive = mask.hasPositive || (result.value ?? 0) > 0;\n        return result;\n      });\n    });\n  });\n  return {\n    completedData: data,\n    masksData: Object.values(masks)\n  };\n};\nconst leaveStyle = ({\n  layout,\n  yOrigin,\n  x,\n  width,\n  y,\n  xOrigin,\n  height\n}) => _extends({}, layout === 'vertical' ? {\n  y: yOrigin,\n  x,\n  height: 0,\n  width\n} : {\n  y,\n  x: xOrigin,\n  height,\n  width: 0\n});\nconst enterStyle = ({\n  x,\n  width,\n  y,\n  height\n}) => ({\n  y,\n  x,\n  height,\n  width\n});\n\n/**\n * Demos:\n *\n * - [Bars](https://mui.com/x/react-charts/bars/)\n * - [Bar demonstration](https://mui.com/x/react-charts/bar-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [BarPlot API](https://mui.com/x/api/charts/bar-plot/)\n */\nfunction BarPlot(props) {\n  const {\n    completedData,\n    masksData\n  } = useAggregatedData();\n  const {\n      skipAnimation,\n      onItemClick,\n      borderRadius\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const transition = useTransition(completedData, {\n    keys: bar => `${bar.seriesId}-${bar.dataIndex}`,\n    from: leaveStyle,\n    leave: leaveStyle,\n    enter: enterStyle,\n    update: enterStyle,\n    immediate: skipAnimation\n  });\n  const maskTransition = useTransition(masksData, {\n    keys: v => v.id,\n    from: leaveStyle,\n    leave: leaveStyle,\n    enter: enterStyle,\n    update: enterStyle,\n    immediate: skipAnimation\n  });\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [maskTransition((style, {\n      id,\n      hasPositive,\n      hasNegative,\n      layout\n    }) => {\n      return /*#__PURE__*/_jsx(BarClipPath, {\n        maskId: id,\n        borderRadius: borderRadius,\n        hasNegative: hasNegative,\n        hasPositive: hasPositive,\n        layout: layout,\n        style: style\n      });\n    }), transition((style, {\n      seriesId,\n      dataIndex,\n      color,\n      highlightScope,\n      maskId\n    }) => {\n      const barElement = /*#__PURE__*/_jsx(BarElement, _extends({\n        id: seriesId,\n        dataIndex: dataIndex,\n        color: color,\n        highlightScope: highlightScope\n      }, other, {\n        onClick: onItemClick && (event => {\n          onItemClick(event, {\n            type: 'bar',\n            seriesId,\n            dataIndex\n          });\n        }),\n        style: style\n      }));\n      if (!borderRadius || borderRadius <= 0) {\n        return barElement;\n      }\n      return /*#__PURE__*/_jsx(\"g\", {\n        clipPath: `url(#${maskId})`,\n        children: barElement\n      });\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BarPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the border radius of the bar element.\n   */\n  borderRadius: PropTypes.number,\n  /**\n   * Callback fired when a bar item is clicked.\n   * @param {React.MouseEvent<SVGElement, MouseEvent>} event The event source of the callback.\n   * @param {BarItemIdentifier} barItemIdentifier The bar item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { BarPlot };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","useTransition","SeriesContext","CartesianContext","BarElement","isBandScaleConfig","isPointScaleConfig","DEFAULT_X_AXIS_KEY","DEFAULT_Y_AXIS_KEY","getColor","useChartId","BarClipPath","jsx","_jsx","jsxs","_jsxs","getBandSize","bandWidth","W","numberOfGroups","N","gapRatio","r","barWidth","offset","useAggregatedData","seriesData","useContext","bar","series","stackingGroups","seriesOrder","axisData","chartId","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","masks","data","flatMap","ids","groupIds","groupIndex","seriesId","xAxisKey","yAxisKey","xAxisConfig","yAxisConfig","verticalLayout","layout","baseScaleConfig","Error","undefined","xScale","scale","yScale","colorGetter","bandwidth","length","barGapRatio","barOffset","stackedData","map","values","dataIndex","valueCoordinates","v","minValueCoord","Math","round","min","maxValueCoord","max","stackId","stack","result","x","y","xOrigin","yOrigin","height","width","color","highlightScope","value","maskId","id","hasNegative","hasPositive","mask","Infinity","completedData","masksData","Object","leaveStyle","enterStyle","BarPlot","props","skipAnimation","onItemClick","borderRadius","other","transition","keys","from","leave","enter","update","immediate","maskTransition","Fragment","children","style","barElement","onClick","event","type","clipPath","process","env","NODE_ENV","propTypes","number","func","bool","slotProps","object","slots"],"sources":["/user/src/app/node_modules/@mui/x-charts/esm/BarChart/BarPlot.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"skipAnimation\", \"onItemClick\", \"borderRadius\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTransition } from '@react-spring/web';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { CartesianContext } from '../context/CartesianContextProvider';\nimport { BarElement } from './BarElement';\nimport { isBandScaleConfig, isPointScaleConfig } from '../models/axis';\nimport { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\nimport getColor from './getColor';\nimport { useChartId } from '../hooks';\nimport { BarClipPath } from './BarClipPath';\n\n/**\n * Solution of the equations\n * W = barWidth * N + offset * (N-1)\n * offset / (offset + barWidth) = r\n * @param bandWidth The width available to place bars.\n * @param numberOfGroups The number of bars to place in that space.\n * @param gapRatio The ratio of the gap between bars over the bar width.\n * @returns The bar width and the offset between bars.\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getBandSize({\n  bandWidth: W,\n  numberOfGroups: N,\n  gapRatio: r\n}) {\n  if (r === 0) {\n    return {\n      barWidth: W / N,\n      offset: 0\n    };\n  }\n  const barWidth = W / (N + (N - 1) * r);\n  const offset = r * barWidth;\n  return {\n    barWidth,\n    offset\n  };\n}\nconst useAggregatedData = () => {\n  const seriesData = React.useContext(SeriesContext).bar ?? {\n    series: {},\n    stackingGroups: [],\n    seriesOrder: []\n  };\n  const axisData = React.useContext(CartesianContext);\n  const chartId = useChartId();\n  const {\n    series,\n    stackingGroups\n  } = seriesData;\n  const {\n    xAxis,\n    yAxis,\n    xAxisIds,\n    yAxisIds\n  } = axisData;\n  const defaultXAxisId = xAxisIds[0];\n  const defaultYAxisId = yAxisIds[0];\n  const masks = {};\n  const data = stackingGroups.flatMap(({\n    ids: groupIds\n  }, groupIndex) => {\n    return groupIds.flatMap(seriesId => {\n      const xAxisKey = series[seriesId].xAxisKey ?? defaultXAxisId;\n      const yAxisKey = series[seriesId].yAxisKey ?? defaultYAxisId;\n      const xAxisConfig = xAxis[xAxisKey];\n      const yAxisConfig = yAxis[yAxisKey];\n      const verticalLayout = series[seriesId].layout === 'vertical';\n      let baseScaleConfig;\n      if (verticalLayout) {\n        if (!isBandScaleConfig(xAxisConfig)) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n        }\n        if (xAxis[xAxisKey].data === undefined) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should have data property.`);\n        }\n        baseScaleConfig = xAxisConfig;\n        if (isBandScaleConfig(yAxisConfig) || isPointScaleConfig(yAxisConfig)) {\n          throw new Error(`MUI X Charts: ${yAxisKey === DEFAULT_Y_AXIS_KEY ? 'The first `yAxis`' : `The y-axis with id \"${yAxisKey}\"`} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n        }\n      } else {\n        if (!isBandScaleConfig(yAxisConfig)) {\n          throw new Error(`MUI X Charts: ${yAxisKey === DEFAULT_Y_AXIS_KEY ? 'The first `yAxis`' : `The y-axis with id \"${yAxisKey}\"`} should be of type \"band\" to display the bar series of id \"${seriesId}\".`);\n        }\n        if (yAxis[yAxisKey].data === undefined) {\n          throw new Error(`MUI X Charts: ${yAxisKey === DEFAULT_Y_AXIS_KEY ? 'The first `yAxis`' : `The y-axis with id \"${yAxisKey}\"`} should have data property.`);\n        }\n        baseScaleConfig = yAxisConfig;\n        if (isBandScaleConfig(xAxisConfig) || isPointScaleConfig(xAxisConfig)) {\n          throw new Error(`MUI X Charts: ${xAxisKey === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisKey}\"`} should be a continuous type to display the bar series of id \"${seriesId}\".`);\n        }\n      }\n      const xScale = xAxisConfig.scale;\n      const yScale = yAxisConfig.scale;\n      const colorGetter = getColor(series[seriesId], xAxis[xAxisKey], yAxis[yAxisKey]);\n      const bandWidth = baseScaleConfig.scale.bandwidth();\n      const {\n        barWidth,\n        offset\n      } = getBandSize({\n        bandWidth,\n        numberOfGroups: stackingGroups.length,\n        gapRatio: baseScaleConfig.barGapRatio\n      });\n      const barOffset = groupIndex * (barWidth + offset);\n      const {\n        stackedData\n      } = series[seriesId];\n      return stackedData.map((values, dataIndex) => {\n        const valueCoordinates = values.map(v => verticalLayout ? yScale(v) : xScale(v));\n        const minValueCoord = Math.round(Math.min(...valueCoordinates));\n        const maxValueCoord = Math.round(Math.max(...valueCoordinates));\n        const stackId = series[seriesId].stack;\n        const result = {\n          seriesId,\n          dataIndex,\n          layout: series[seriesId].layout,\n          x: verticalLayout ? xScale(xAxis[xAxisKey].data?.[dataIndex]) + barOffset : minValueCoord,\n          y: verticalLayout ? minValueCoord : yScale(yAxis[yAxisKey].data?.[dataIndex]) + barOffset,\n          xOrigin: xScale(0),\n          yOrigin: yScale(0),\n          height: verticalLayout ? maxValueCoord - minValueCoord : barWidth,\n          width: verticalLayout ? barWidth : maxValueCoord - minValueCoord,\n          color: colorGetter(dataIndex),\n          highlightScope: series[seriesId].highlightScope,\n          value: series[seriesId].data[dataIndex],\n          maskId: `${chartId}_${stackId || seriesId}_${groupIndex}_${dataIndex}`\n        };\n        if (!masks[result.maskId]) {\n          masks[result.maskId] = {\n            id: result.maskId,\n            width: 0,\n            height: 0,\n            hasNegative: false,\n            hasPositive: false,\n            layout: result.layout,\n            xOrigin: xScale(0),\n            yOrigin: yScale(0),\n            x: 0,\n            y: 0\n          };\n        }\n        const mask = masks[result.maskId];\n        mask.width = result.layout === 'vertical' ? result.width : mask.width + result.width;\n        mask.height = result.layout === 'vertical' ? mask.height + result.height : result.height;\n        mask.x = Math.min(mask.x === 0 ? Infinity : mask.x, result.x);\n        mask.y = Math.min(mask.y === 0 ? Infinity : mask.y, result.y);\n        mask.hasNegative = mask.hasNegative || (result.value ?? 0) < 0;\n        mask.hasPositive = mask.hasPositive || (result.value ?? 0) > 0;\n        return result;\n      });\n    });\n  });\n  return {\n    completedData: data,\n    masksData: Object.values(masks)\n  };\n};\nconst leaveStyle = ({\n  layout,\n  yOrigin,\n  x,\n  width,\n  y,\n  xOrigin,\n  height\n}) => _extends({}, layout === 'vertical' ? {\n  y: yOrigin,\n  x,\n  height: 0,\n  width\n} : {\n  y,\n  x: xOrigin,\n  height,\n  width: 0\n});\nconst enterStyle = ({\n  x,\n  width,\n  y,\n  height\n}) => ({\n  y,\n  x,\n  height,\n  width\n});\n\n/**\n * Demos:\n *\n * - [Bars](https://mui.com/x/react-charts/bars/)\n * - [Bar demonstration](https://mui.com/x/react-charts/bar-demo/)\n * - [Stacking](https://mui.com/x/react-charts/stacking/)\n *\n * API:\n *\n * - [BarPlot API](https://mui.com/x/api/charts/bar-plot/)\n */\nfunction BarPlot(props) {\n  const {\n    completedData,\n    masksData\n  } = useAggregatedData();\n  const {\n      skipAnimation,\n      onItemClick,\n      borderRadius\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const transition = useTransition(completedData, {\n    keys: bar => `${bar.seriesId}-${bar.dataIndex}`,\n    from: leaveStyle,\n    leave: leaveStyle,\n    enter: enterStyle,\n    update: enterStyle,\n    immediate: skipAnimation\n  });\n  const maskTransition = useTransition(masksData, {\n    keys: v => v.id,\n    from: leaveStyle,\n    leave: leaveStyle,\n    enter: enterStyle,\n    update: enterStyle,\n    immediate: skipAnimation\n  });\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [maskTransition((style, {\n      id,\n      hasPositive,\n      hasNegative,\n      layout\n    }) => {\n      return /*#__PURE__*/_jsx(BarClipPath, {\n        maskId: id,\n        borderRadius: borderRadius,\n        hasNegative: hasNegative,\n        hasPositive: hasPositive,\n        layout: layout,\n        style: style\n      });\n    }), transition((style, {\n      seriesId,\n      dataIndex,\n      color,\n      highlightScope,\n      maskId\n    }) => {\n      const barElement = /*#__PURE__*/_jsx(BarElement, _extends({\n        id: seriesId,\n        dataIndex: dataIndex,\n        color: color,\n        highlightScope: highlightScope\n      }, other, {\n        onClick: onItemClick && (event => {\n          onItemClick(event, {\n            type: 'bar',\n            seriesId,\n            dataIndex\n          });\n        }),\n        style: style\n      }));\n      if (!borderRadius || borderRadius <= 0) {\n        return barElement;\n      }\n      return /*#__PURE__*/_jsx(\"g\", {\n        clipPath: `url(#${maskId})`,\n        children: barElement\n      });\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BarPlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Defines the border radius of the bar element.\n   */\n  borderRadius: PropTypes.number,\n  /**\n   * Callback fired when a bar item is clicked.\n   * @param {React.MouseEvent<SVGElement, MouseEvent>} event The event source of the callback.\n   * @param {BarItemIdentifier} barItemIdentifier The bar item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { BarPlot };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}