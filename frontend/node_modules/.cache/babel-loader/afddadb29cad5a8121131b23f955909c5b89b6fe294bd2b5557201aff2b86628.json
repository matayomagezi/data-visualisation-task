{"ast":null,"code":"var _jsxFileName = \"/user/src/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, TextField, Button } from '@mui/material';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [parameter, setParameter] = useState('');\n  const fetchData = () => {\n    axios.get(`http://localhost:5000/data?parameter=${parameter}`).then(response => {\n      const fetchedData = response.data.map(item => ({\n        ...item,\n        timestamp: new Date(item.timestamp).getTime() // Convert timestamp to a numerical value for the chart\n      }));\n      setData(fetchedData);\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Time-Series Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Parameter\",\n      variant: \"outlined\",\n      value: parameter,\n      onChange: e => setParameter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: fetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n        width: 800,\n        height: 400,\n        margin: {\n          top: 20,\n          right: 20,\n          bottom: 20,\n          left: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          name: \"Time\",\n          domain: ['auto', 'auto'],\n          tickFormatter: unixTime => new Date(unixTime).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          dataKey: \"value\",\n          name: \"Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          cursor: {\n            strokeDasharray: '3 3'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n          name: \"Values\",\n          data: data,\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZwKG/d+G5i1XOkji6Vy6wrB64fE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Typography","TextField","Button","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","App","_s","data","setData","parameter","setParameter","fetchData","get","then","response","fetchedData","map","item","timestamp","Date","getTime","catch","error","console","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","color","onClick","width","height","style","marginTop","margin","top","right","bottom","left","dataKey","name","domain","tickFormatter","unixTime","toLocaleString","cursor","strokeDasharray","fill","_c","$RefreshReg$"],"sources":["/user/src/app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button\n} from '@mui/material';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [parameter, setParameter] = useState('');\n\n  const fetchData = () => {\n    axios.get(`http://localhost:5000/data?parameter=${parameter}`)\n      .then(response => {\n        const fetchedData = response.data.map(item => ({\n          ...item,\n          timestamp: new Date(item.timestamp).getTime(), // Convert timestamp to a numerical value for the chart\n        }));\n        setData(fetchedData);\n      })\n      .catch(error => {\n        console.error('There was an error fetching the data!', error);\n      });\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Time-Series Data\n      </Typography>\n      <TextField\n        label=\"Parameter\"\n        variant=\"outlined\"\n        value={parameter}\n        onChange={(e) => setParameter(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={fetchData}>\n        Fetch Data\n      </Button>\n      <ResponsiveContainer width=\"100%\" height={400} style={{ marginTop: '20px' }}>\n        <ScatterChart\n          width={800}\n          height={400}\n          margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n        >\n          <CartesianGrid />\n          <XAxis\n            dataKey=\"timestamp\"\n            name=\"Time\"\n            domain={['auto', 'auto']}\n            tickFormatter={(unixTime) => new Date(unixTime).toLocaleString()}\n          />\n          <YAxis dataKey=\"value\" name=\"Value\" />\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n          <Legend />\n          <Scatter name=\"Values\" data={data} fill=\"#8884d8\" />\n        </ScatterChart>\n      </ResponsiveContainer>\n    </Container>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}