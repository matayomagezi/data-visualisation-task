{"ast":null,"code":"var _jsxFileName = \"/user/src/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, TextField, Button, CircularProgress } from '@mui/material';\nimport { ScatterChart } from '@mui/x-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [parameter, setParameter] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fetchData = () => {\n    setLoading(true);\n    axios.get(`http://localhost:5000/data?parameter=${parameter}`).then(response => {\n      console.log(response.data);\n      const fetchedData = response.data.map(item => ({\n        ...item,\n        timestamp: new Date(item.timestamp).getTime() // Convert timestamp to a numerical value for the chart\n      }));\n      setData(fetchedData);\n      setLoading(false);\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n      setLoading(false);\n    });\n  };\n  console.log(\"AAAAAAAAA\");\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Time-Series Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Parameter\",\n      variant: \"outlined\",\n      value: parameter,\n      onChange: e => setParameter(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: fetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ScatterChart, {\n      width: 800,\n      height: 400,\n      margin: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      },\n      series: [{\n        label: 'Values',\n        data: data\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mk8n59Z2BGfnJCy6dwD/nVnc0lI=\");\n_c = App;\nexport default App;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import {\n//   ScatterChart\n// } from '@mui/material';\n\n// function App() {\n//   const [data, setData] = useState([]);\n//   const [parameter, setParameter] = useState('');\n\n//   const fetchData = () => {\n//     axios.get(`http://localhost:5000/data?parameter=${parameter}`)\n//       .then(response => {\n//         const fetchedData = response.data.map(item => ({\n//           ...item,\n//           timestamp: new Date(item.timestamp).getTime(), // Convert timestamp to a numerical value for the chart\n//         }));\n//         setData(fetchedData);\n//       })\n//       .catch(error => {\n//         console.error('There was an error fetching the data!', error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//         Time-Series Data\n//       </Typography>\n//       <ScatterChart\n//         width={600}\n//         height={300}\n//         series={[\n//           {\n//             label: 'Parameter Foo',\n//             data: data.map((v) => ({ x: v.x1, y: v.y1, id: v.id })),\n//           }\n//         ]}\n//       />\n//     </div>\n//     <Container>\n//       <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//         Time-Series Data\n//       </Typography>\n//       <TextField\n//         label=\"Parameter\"\n//         variant=\"outlined\"\n//         value={parameter}\n//         onChange={(e) => setParameter(e.target.value)}\n//       />\n//       <Button variant=\"contained\" color=\"primary\" onClick={fetchData}>\n//         Fetch Data\n//       </Button>\n//       <ResponsiveContainer width=\"100%\" height={400} style={{ marginTop: '20px' }}>\n//         <ScatterChart\n//           width={800}\n//           height={400}\n//           margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n//         >\n//           <CartesianGrid />\n//           <XAxis\n//             dataKey=\"timestamp\"\n//             name=\"Time\"\n//             domain={['auto', 'auto']}\n//             tickFormatter={(unixTime) => new Date(unixTime).toLocaleString()}\n//           />\n//           <YAxis dataKey=\"value\" name=\"Value\" />\n//           <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n//           <Legend />\n//           <Scatter name=\"Values\" data={data} fill=\"#8884d8\" />\n//         </ScatterChart>\n//       </ResponsiveContainer>\n//     </Container>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","TextField","Button","CircularProgress","ScatterChart","jsxDEV","_jsxDEV","App","_s","data","setData","parameter","setParameter","loading","setLoading","fetchData","get","then","response","console","log","fetchedData","map","item","timestamp","Date","getTime","catch","error","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","color","onClick","width","height","margin","top","right","bottom","left","series","_c","$RefreshReg$"],"sources":["/user/src/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  CircularProgress\n} from '@mui/material';\nimport { ScatterChart } from '@mui/x-charts';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [parameter, setParameter] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const fetchData = () => {\n    setLoading(true);\n    axios.get(`http://localhost:5000/data?parameter=${parameter}`)\n      .then(response => {\n        console.log(response.data)\n        const fetchedData = response.data.map(item => ({\n          ...item,\n          timestamp: new Date(item.timestamp).getTime(), // Convert timestamp to a numerical value for the chart\n        }));\n        setData(fetchedData);\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('There was an error fetching the data!', error);\n        setLoading(false);\n      });\n  };\n\n  console.log(\"AAAAAAAAA\")\n  console.log(data)\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Time-Series Data\n      </Typography>\n      <TextField\n        label=\"Parameter\"\n        variant=\"outlined\"\n        value={parameter}\n        onChange={(e) => setParameter(e.target.value)}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={fetchData}>\n        Fetch Data\n      </Button>\n      {loading ? (\n        <CircularProgress />\n      ) : (\n          <ScatterChart\n            width={800}\n            height={400}\n            margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n            series={[\n              {\n                label: 'Values',\n              data: data\n              }\n              \n            ]}\n          />\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import {\n//   ScatterChart\n// } from '@mui/material';\n\n\n// function App() {\n//   const [data, setData] = useState([]);\n//   const [parameter, setParameter] = useState('');\n\n//   const fetchData = () => {\n//     axios.get(`http://localhost:5000/data?parameter=${parameter}`)\n//       .then(response => {\n//         const fetchedData = response.data.map(item => ({\n//           ...item,\n//           timestamp: new Date(item.timestamp).getTime(), // Convert timestamp to a numerical value for the chart\n//         }));\n//         setData(fetchedData);\n//       })\n//       .catch(error => {\n//         console.error('There was an error fetching the data!', error);\n//       });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//         Time-Series Data\n//       </Typography>\n//       <ScatterChart\n//         width={600}\n//         height={300}\n//         series={[\n//           {\n//             label: 'Parameter Foo',\n//             data: data.map((v) => ({ x: v.x1, y: v.y1, id: v.id })),\n//           }\n//         ]}\n//       />\n//     </div>\n//     <Container>\n//       <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n//         Time-Series Data\n//       </Typography>\n//       <TextField\n//         label=\"Parameter\"\n//         variant=\"outlined\"\n//         value={parameter}\n//         onChange={(e) => setParameter(e.target.value)}\n//       />\n//       <Button variant=\"contained\" color=\"primary\" onClick={fetchData}>\n//         Fetch Data\n//       </Button>\n//       <ResponsiveContainer width=\"100%\" height={400} style={{ marginTop: '20px' }}>\n//         <ScatterChart\n//           width={800}\n//           height={400}\n//           margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n//         >\n//           <CartesianGrid />\n//           <XAxis\n//             dataKey=\"timestamp\"\n//             name=\"Time\"\n//             domain={['auto', 'auto']}\n//             tickFormatter={(unixTime) => new Date(unixTime).toLocaleString()}\n//           />\n//           <YAxis dataKey=\"value\" name=\"Value\" />\n//           <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n//           <Legend />\n//           <Scatter name=\"Values\" data={data} fill=\"#8884d8\" />\n//         </ScatterChart>\n//       </ResponsiveContainer>\n//     </Container>\n//   );\n// }\n\n// export default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}